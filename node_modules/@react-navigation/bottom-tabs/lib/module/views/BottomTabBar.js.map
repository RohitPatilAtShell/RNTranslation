{"version":3,"sources":["BottomTabBar.tsx"],"names":["React","View","Animated","StyleSheet","Keyboard","Platform","Dimensions","NavigationContext","SafeAreaConsumer","TabBarIcon","DEFAULT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","TabBarBottom","state","dimensions","get","layout","height","width","keyboard","visible","Value","handleOrientationChange","window","setState","handleKeyboardShow","timing","toValue","duration","useNativeDriver","start","handleKeyboardHide","finished","handleLayout","e","nativeEvent","renderLabel","route","focused","props","activeTintColor","inactiveTintColor","labelStyle","showLabel","showIcon","allowFontScaling","label","getLabelText","horizontal","shouldUseHorizontalLabels","color","styles","labelBeside","labelBeneath","renderIcon","activeOpacity","inactiveOpacity","iconHorizontal","iconVertical","adaptive","tabStyle","labelPosition","routes","isLandscape","position","maxTabItemWidth","flattenedStyle","flatten","maxWidth","length","addEventListener","OS","addListener","removeEventListener","removeListener","descriptors","keyboardHidesTabBar","activeBackgroundColor","inactiveBackgroundColor","onTabPress","onTabLongPress","getAccessibilityLabel","getAccessibilityRole","getAccessibilityStates","renderButton","getTestID","style","insets","tabBar","transform","translateY","interpolate","inputRange","outputRange","bottom","paddingBottom","content","map","index","scene","accessibilityLabel","accessibilityRole","accessibilityStates","testID","backgroundColor","key","navigation","onPress","onLongPress","tab","tabLandscape","tabPortrait","children","Component","defaultProps","create","left","right","borderTopWidth","hairlineWidth","borderTopColor","elevation","flex","flexDirection","alignItems","justifyContent","textAlign","fontSize","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Keyboard,\n  Platform,\n  LayoutChangeEvent,\n  ScaledSize,\n  Dimensions,\n} from 'react-native';\nimport { Route, NavigationContext } from '@react-navigation/core';\nimport { SafeAreaConsumer } from 'react-native-safe-area-context';\n\nimport TabBarIcon from './TabBarIcon';\nimport { BottomTabBarProps } from '../types';\n\ntype State = {\n  dimensions: { height: number; width: number };\n  layout: { height: number; width: number };\n  keyboard: boolean;\n  visible: Animated.Value;\n};\n\ntype Props = BottomTabBarProps & {\n  activeTintColor: string;\n  inactiveTintColor: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 50;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nexport default class TabBarBottom extends React.Component<Props, State> {\n  static defaultProps = {\n    keyboardHidesTabBar: false,\n    activeTintColor: '#007AFF',\n    activeBackgroundColor: 'transparent',\n    inactiveTintColor: '#8E8E93',\n    inactiveBackgroundColor: 'transparent',\n    showLabel: true,\n    showIcon: true,\n    allowFontScaling: true,\n    adaptive: true,\n  };\n\n  state = {\n    dimensions: Dimensions.get('window'),\n    layout: { height: 0, width: 0 },\n    keyboard: false,\n    visible: new Animated.Value(1),\n  };\n\n  componentDidMount() {\n    Dimensions.addEventListener('change', this.handleOrientationChange);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this.handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this.handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this.handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this.handleKeyboardHide);\n    }\n  }\n\n  componentWillUnmount() {\n    Dimensions.removeEventListener('change', this.handleOrientationChange);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this.handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this.handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this.handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this.handleKeyboardHide);\n    }\n  }\n\n  private handleOrientationChange = ({ window }: { window: ScaledSize }) => {\n    this.setState({ dimensions: window });\n  };\n\n  private handleKeyboardShow = () =>\n    this.setState({ keyboard: true }, () =>\n      Animated.timing(this.state.visible, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver: true,\n      }).start()\n    );\n\n  private handleKeyboardHide = () =>\n    Animated.timing(this.state.visible, {\n      toValue: 1,\n      duration: 250,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        this.setState({ keyboard: false });\n      }\n    });\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { layout } = this.state;\n    const { height, width } = e.nativeEvent.layout;\n\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n      },\n    });\n  };\n\n  private renderLabel = ({\n    route,\n    focused,\n  }: {\n    route: Route<string>;\n    focused: boolean;\n  }) => {\n    const {\n      activeTintColor,\n      inactiveTintColor,\n      labelStyle,\n      showLabel,\n      showIcon,\n      allowFontScaling,\n    } = this.props;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const label = this.props.getLabelText({ route });\n    const horizontal = this.shouldUseHorizontalLabels();\n    const color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color },\n            showIcon && horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'string') {\n      return label;\n    }\n\n    return label({ focused, color });\n  };\n\n  private renderIcon = ({\n    route,\n    focused,\n  }: {\n    route: Route<string>;\n    focused: boolean;\n  }) => {\n    const {\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      showIcon,\n    } = this.props;\n\n    if (showIcon === false) {\n      return null;\n    }\n\n    const horizontal = this.shouldUseHorizontalLabels();\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <TabBarIcon\n        route={route}\n        size={horizontal ? 17 : 24}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={renderIcon}\n        style={horizontal ? styles.iconHorizontal : styles.iconVertical}\n      />\n    );\n  };\n\n  private shouldUseHorizontalLabels = () => {\n    const { state, adaptive, tabStyle, labelPosition } = this.props;\n    const { dimensions } = this.state;\n    const { routes } = state;\n    const isLandscape = dimensions.width > dimensions.height;\n\n    if (labelPosition) {\n      let position;\n\n      if (typeof labelPosition === 'string') {\n        position = labelPosition;\n      } else {\n        position = labelPosition({ dimensions });\n      }\n\n      if (position) {\n        return position === 'beside-icon';\n      }\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (dimensions.width >= 768) {\n      // Screen size matches a tablet\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= dimensions.width;\n    } else {\n      return isLandscape;\n    }\n  };\n\n  render() {\n    const {\n      state,\n      descriptors,\n      keyboardHidesTabBar,\n      activeBackgroundColor,\n      inactiveBackgroundColor,\n      onTabPress,\n      onTabLongPress,\n      getAccessibilityLabel,\n      getAccessibilityRole,\n      getAccessibilityStates,\n      renderButton,\n      getTestID,\n      style,\n      tabStyle,\n    } = this.props;\n    const { routes } = state;\n\n    return (\n      <SafeAreaConsumer>\n        {insets => (\n          <Animated.View\n            style={[\n              styles.tabBar,\n              keyboardHidesTabBar\n                ? {\n                    // When the keyboard is shown, slide down the tab bar\n                    transform: [\n                      {\n                        translateY: this.state.visible.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [this.state.layout.height, 0],\n                        }),\n                      },\n                    ],\n                    // Absolutely position the tab bar so that the content is below it\n                    // This is needed to avoid gap at bottom when the tab bar is hidden\n                    position: this.state.keyboard ? 'absolute' : null,\n                  }\n                : null,\n              {\n                height: DEFAULT_TABBAR_HEIGHT + (insets ? insets.bottom : 0),\n                paddingBottom: insets ? insets.bottom : 0,\n              },\n              style,\n            ]}\n            pointerEvents={\n              keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto'\n            }\n          >\n            <View style={styles.content} onLayout={this.handleLayout}>\n              {routes.map((route, index) => {\n                const focused = index === state.index;\n                const scene = { route, focused };\n                const accessibilityLabel = getAccessibilityLabel({\n                  route,\n                });\n\n                const accessibilityRole = getAccessibilityRole({\n                  route,\n                });\n\n                const accessibilityStates = getAccessibilityStates(scene);\n\n                const testID = getTestID({ route });\n\n                const backgroundColor = focused\n                  ? activeBackgroundColor\n                  : inactiveBackgroundColor;\n\n                return (\n                  <NavigationContext.Provider\n                    key={route.key}\n                    value={descriptors[route.key].navigation}\n                  >\n                    {renderButton({\n                      route,\n                      onPress: () => onTabPress({ route }),\n                      onLongPress: () => onTabLongPress({ route }),\n                      testID,\n                      accessibilityLabel,\n                      accessibilityRole,\n                      accessibilityStates,\n                      style: [\n                        styles.tab,\n                        { backgroundColor },\n                        this.shouldUseHorizontalLabels()\n                          ? styles.tabLandscape\n                          : styles.tabPortrait,\n                        tabStyle,\n                      ],\n                      children: (\n                        <React.Fragment>\n                          {this.renderIcon(scene)}\n                          {this.renderLabel(scene)}\n                        </React.Fragment>\n                      ),\n                    })}\n                  </NavigationContext.Provider>\n                );\n              })}\n            </View>\n          </Animated.View>\n        )}\n      </SafeAreaConsumer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#fff',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: 'rgba(0, 0, 0, .3)',\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  iconVertical: {\n    flex: 1,\n  },\n  iconHorizontal: {\n    height: '100%',\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5,\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20,\n  },\n});\n"]}