{"version":3,"sources":["BottomTabView.tsx"],"names":["React","View","TouchableWithoutFeedback","StyleSheet","CommonActions","ScreenContainer","SafeAreaProviderCompat","ResourceSavingScene","BottomTabBar","BottomTabView","state","loaded","props","index","renderButton","route","children","style","rest","descriptors","descriptor","key","options","tabBarButton","renderIcon","focused","color","size","tabBarIcon","getLabelText","tabBarLabel","undefined","title","name","getAccessibilityLabel","tabBarAccessibilityLabel","label","routes","indexOf","length","getAccessibilityRole","getAccessibilityStates","getTestID","tabBarTestID","handleTabPress","navigation","event","emit","type","target","defaultPrevented","dispatch","navigate","handleTabLongPress","renderTabBar","tabBar","tabBarOptions","tabBarVisible","onTabPress","onTabLongPress","lazy","unmountInactiveScreens","styles","container","pages","map","includes","isFocused","absoluteFill","content","render","nextProps","prevState","Component","defaultProps","create","flex","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  AccessibilityRole,\n  AccessibilityStates,\n} from 'react-native';\n\nimport { Route, CommonActions } from '@react-navigation/core';\nimport { TabNavigationState } from '@react-navigation/routers';\n// eslint-disable-next-line import/no-unresolved\nimport { ScreenContainer } from 'react-native-screens';\n\nimport SafeAreaProviderCompat from './SafeAreaProviderCompat';\nimport ResourceSavingScene from './ResourceSavingScene';\nimport BottomTabBar from './BottomTabBar';\nimport {\n  BottomTabNavigationConfig,\n  BottomTabDescriptorMap,\n  BottomTabNavigationHelpers,\n  BottomTabBarProps,\n  BottomTabBarButtonProps,\n} from '../types';\n\ntype Props = BottomTabNavigationConfig & {\n  state: TabNavigationState;\n  navigation: BottomTabNavigationHelpers;\n  descriptors: BottomTabDescriptorMap;\n};\n\ntype State = {\n  loaded: number[];\n};\n\nexport default class BottomTabView extends React.Component<Props, State> {\n  static defaultProps = {\n    lazy: true,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const { index } = nextProps.state;\n\n    return {\n      // Set the current tab to be loaded if it was not loaded before\n      loaded: prevState.loaded.includes(index)\n        ? prevState.loaded\n        : [...prevState.loaded, index],\n    };\n  }\n\n  state = {\n    loaded: [this.props.state.index],\n  };\n\n  private renderButton = ({\n    route,\n    children,\n    style,\n    ...rest\n  }: { route: Route<string> } & BottomTabBarButtonProps) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarButton) {\n      return options.tabBarButton({ children, style, ...rest });\n    }\n\n    return (\n      <TouchableWithoutFeedback {...rest}>\n        <View style={style}>{children}</View>\n      </TouchableWithoutFeedback>\n    );\n  };\n\n  private renderIcon = ({\n    route,\n    focused,\n    color,\n    size,\n  }: {\n    route: Route<string>;\n    focused: boolean;\n    color: string;\n    size: number;\n  }) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarIcon) {\n      return typeof options.tabBarIcon === 'string'\n        ? options.tabBarIcon\n        : options.tabBarIcon({ focused, color, size });\n    }\n\n    return null;\n  };\n\n  private getLabelText = ({ route }: { route: Route<string> }) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarLabel !== undefined) {\n      return options.tabBarLabel;\n    }\n\n    if (typeof options.title === 'string') {\n      return options.title;\n    }\n\n    return route.name;\n  };\n\n  private getAccessibilityLabel = ({ route }: { route: Route<string> }) => {\n    const { state, descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (typeof options.tabBarAccessibilityLabel !== 'undefined') {\n      return options.tabBarAccessibilityLabel;\n    }\n\n    const label = this.getLabelText({ route });\n\n    if (typeof label === 'string') {\n      return `${label}, tab, ${state.routes.indexOf(route) + 1} of ${\n        state.routes.length\n      }`;\n    }\n\n    return undefined;\n  };\n\n  private getAccessibilityRole = (): AccessibilityRole => 'button';\n\n  private getAccessibilityStates = ({\n    focused,\n  }: {\n    focused: boolean;\n  }): AccessibilityStates[] => (focused ? ['selected'] : []);\n\n  private getTestID = ({ route }: { route: Route<string> }) =>\n    this.props.descriptors[route.key].options.tabBarTestID;\n\n  private handleTabPress = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n    const event = this.props.navigation.emit({\n      type: 'tabPress',\n      target: route.key,\n    });\n\n    if (\n      state.routes[state.index].key !== route.key &&\n      !event.defaultPrevented\n    ) {\n      navigation.dispatch({\n        ...CommonActions.navigate(route.name),\n        target: state.key,\n      });\n    }\n  };\n\n  private handleTabLongPress = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'tabLongPress',\n      target: route.key,\n    });\n  };\n\n  private renderTabBar = () => {\n    const {\n      tabBar = (props: BottomTabBarProps) => <BottomTabBar {...props} />,\n      tabBarOptions,\n      state,\n      navigation,\n    } = this.props;\n\n    const { descriptors } = this.props;\n    const route = state.routes[state.index];\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarVisible === false) {\n      return null;\n    }\n\n    return tabBar({\n      ...tabBarOptions,\n      state: state,\n      descriptors: descriptors,\n      navigation: navigation,\n      onTabPress: this.handleTabPress,\n      onTabLongPress: this.handleTabLongPress,\n      getLabelText: this.getLabelText,\n      getAccessibilityLabel: this.getAccessibilityLabel,\n      getAccessibilityRole: this.getAccessibilityRole,\n      getAccessibilityStates: this.getAccessibilityStates,\n      getTestID: this.getTestID,\n      renderButton: this.renderButton,\n      renderIcon: this.renderIcon,\n    });\n  };\n\n  render() {\n    const { state, descriptors, lazy, unmountInactiveScreens } = this.props;\n    const { routes } = state;\n    const { loaded } = this.state;\n\n    return (\n      <SafeAreaProviderCompat>\n        <View style={styles.container}>\n          <ScreenContainer style={styles.pages}>\n            {routes.map((route, index) => {\n              if (unmountInactiveScreens && index !== state.index) {\n                return null;\n              }\n\n              if (lazy && !loaded.includes(index)) {\n                // Don't render a screen if we've never navigated to it\n                return null;\n              }\n\n              const isFocused = state.index === index;\n\n              return (\n                <ResourceSavingScene\n                  key={route.key}\n                  style={StyleSheet.absoluteFill}\n                  isVisible={isFocused}\n                >\n                  <View\n                    accessibilityElementsHidden={!isFocused}\n                    importantForAccessibility={\n                      isFocused ? 'auto' : 'no-hide-descendants'\n                    }\n                    style={styles.content}\n                  >\n                    {descriptors[route.key].render()}\n                  </View>\n                </ResourceSavingScene>\n              );\n            })}\n          </ScreenContainer>\n          {this.renderTabBar()}\n        </View>\n      </SafeAreaProviderCompat>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  pages: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n  },\n});\n"]}