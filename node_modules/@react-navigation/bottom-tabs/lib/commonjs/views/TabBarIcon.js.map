{"version":3,"sources":["TabBarIcon.tsx"],"names":["TabBarIcon","route","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","size","style","styles","icon","opacity","focused","color","StyleSheet","create","position","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":"uKAAA,oDACA,yC,+GAmBe,QAASA,CAAAA,UAAT,MASL,IARRC,CAAAA,KAQQ,MARRA,KAQQ,CAPRC,aAOQ,MAPRA,aAOQ,CANRC,eAMQ,MANRA,eAMQ,CALRC,eAKQ,MALRA,eAKQ,CAJRC,iBAIQ,MAJRA,iBAIQ,CAHRC,UAGQ,MAHRA,UAGQ,CAFRC,IAEQ,MAFRA,IAEQ,CADRC,KACQ,MADRA,KACQ,CAGR,MACE,8BAAC,iBAAD,EAAM,KAAK,CAAEA,KAAb,iDACE,6BAAC,iBAAD,EAAM,KAAK,CAAE,CAACC,MAAM,CAACC,IAAR,CAAc,CAAEC,OAAO,CAAET,aAAX,CAAd,CAAb,iDACGI,UAAU,CAAC,CACVL,KAAK,CAALA,KADU,CAEVW,OAAO,CAAE,IAFC,CAGVL,IAAI,CAAJA,IAHU,CAIVM,KAAK,CAAET,eAJG,CAAD,CADb,CADF,CASE,6BAAC,iBAAD,EAAM,KAAK,CAAE,CAACK,MAAM,CAACC,IAAR,CAAc,CAAEC,OAAO,CAAER,eAAX,CAAd,CAAb,iDACGG,UAAU,CAAC,CACVL,KAAK,CAALA,KADU,CAEVW,OAAO,CAAE,KAFC,CAGVL,IAAI,CAAJA,IAHU,CAIVM,KAAK,CAAER,iBAJG,CAAD,CADb,CATF,CADF,CAoBD,CAED,GAAMI,CAAAA,MAAM,CAAGK,wBAAWC,MAAX,CAAkB,CAC/BL,IAAI,CAAE,CAIJM,QAAQ,CAAE,UAJN,CAKJC,SAAS,CAAE,QALP,CAMJC,UAAU,CAAE,QANR,CAOJC,cAAc,CAAE,QAPZ,CAQJC,MAAM,CAAE,MARJ,CASJC,KAAK,CAAE,MATH,CAWJC,QAAQ,CAAE,EAXN,CADyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport { Route } from '@react-navigation/core';\n\ntype Props = {\n  route: Route<string>;\n  size: number;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor: string;\n  inactiveTintColor: string;\n  renderIcon: (props: {\n    route: Route<string>;\n    focused: boolean;\n    color: string;\n    size: number;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default function TabBarIcon({\n  route,\n  activeOpacity,\n  inactiveOpacity,\n  activeTintColor,\n  inactiveTintColor,\n  renderIcon,\n  size,\n  style,\n}: Props) {\n  // We render the icon twice at the same position on top of each other:\n  // active and inactive one, so we can fade between them.\n  return (\n    <View style={style}>\n      <View style={[styles.icon, { opacity: activeOpacity }]}>\n        {renderIcon({\n          route,\n          focused: true,\n          size,\n          color: activeTintColor,\n        })}\n      </View>\n      <View style={[styles.icon, { opacity: inactiveOpacity }]}>\n        {renderIcon({\n          route,\n          focused: false,\n          size,\n          color: inactiveTintColor,\n        })}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n});\n"]}