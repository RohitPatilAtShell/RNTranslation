import _defineProperty from"@babel/runtime/helpers/defineProperty";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import*as React from'react';import*as CommonActions from'./CommonActions';import NavigationContext from'./NavigationContext';import ResetRootContext from'./ResetRootContext';import{NavigationStateContext}from'./NavigationContainer';import{PrivateValueStore}from'./types';PrivateValueStore;export default function useNavigationHelpers(_ref){var onAction=_ref.onAction,getState=_ref.getState,emitter=_ref.emitter,router=_ref.router;var resetRoot=React.useContext(ResetRootContext);var parentNavigationHelpers=React.useContext(NavigationContext);var _React$useContext=React.useContext(NavigationStateContext),performTransaction=_React$useContext.performTransaction;return React.useMemo(function(){var dispatch=function dispatch(action){return performTransaction(function(){var payload=typeof action==='function'?action(getState()):action;onAction(payload);});};var actions=_objectSpread({},router.actionCreators,{},CommonActions);var helpers=Object.keys(actions).reduce(function(acc,name){acc[name]=function(){return dispatch(actions[name].apply(actions,arguments));};return acc;},{});return _objectSpread({},parentNavigationHelpers,{},helpers,{resetRoot:resetRoot,dispatch:dispatch,emit:emitter.emit,isFocused:parentNavigationHelpers?parentNavigationHelpers.isFocused:function(){return true;},canGoBack:function canGoBack(){var state=getState();return router.getStateForAction(state,CommonActions.goBack(),{routeNames:state.routeNames,routeParamList:{}})!==null||parentNavigationHelpers&&parentNavigationHelpers.canGoBack()||false;}});},[router,getState,parentNavigationHelpers,resetRoot,emitter.emit,performTransaction,onAction]);}
//# sourceMappingURL=useNavigationHelpers.js.map