{"version":3,"sources":["useNavigationHelpers.tsx"],"names":["React","CommonActions","NavigationContext","ResetRootContext","NavigationStateContext","PrivateValueStore","useNavigationHelpers","onAction","getState","emitter","router","resetRoot","useContext","parentNavigationHelpers","performTransaction","useMemo","dispatch","action","payload","actions","actionCreators","helpers","Object","keys","reduce","acc","name","emit","isFocused","canGoBack","state","getStateForAction","goBack","routeNames","routeParamList"],"mappings":"+0BAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,OAASC,sBAAT,KAAuC,uBAAvC,CAEA,OAOEC,iBAPF,KAQO,SARP,CAYAA,iBAAiB,CAgBjB,cAAe,SAASC,CAAAA,oBAAT,MAIoD,IAA/DC,CAAAA,QAA+D,MAA/DA,QAA+D,CAArDC,QAAqD,MAArDA,QAAqD,CAA3CC,OAA2C,MAA3CA,OAA2C,CAAlCC,MAAkC,MAAlCA,MAAkC,CACjE,GAAMC,CAAAA,SAAS,CAAGX,KAAK,CAACY,UAAN,CAAiBT,gBAAjB,CAAlB,CACA,GAAMU,CAAAA,uBAAuB,CAAGb,KAAK,CAACY,UAAN,CAAiBV,iBAAjB,CAAhC,CAFiE,sBAGlCF,KAAK,CAACY,UAAN,CAAiBR,sBAAjB,CAHkC,CAGzDU,kBAHyD,mBAGzDA,kBAHyD,CAKjE,MAAOd,CAAAA,KAAK,CAACe,OAAN,CAAc,UAAM,CACzB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,MAAD,QACfH,CAAAA,kBAAkB,CAAC,UAAM,CACvB,GAAMI,CAAAA,OAAO,CACX,MAAOD,CAAAA,MAAP,GAAkB,UAAlB,CAA+BA,MAAM,CAACT,QAAQ,EAAT,CAArC,CAAoDS,MADtD,CAGAV,QAAQ,CAACW,OAAD,CAAR,CACD,CALiB,CADH,EAAjB,CAQA,GAAMC,CAAAA,OAAO,kBACRT,MAAM,CAACU,cADC,IAERnB,aAFQ,CAAb,CAKA,GAAMoB,CAAAA,OAAO,CAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBK,MAArB,CACd,SAACC,GAAD,CAAMC,IAAN,CAAe,CAEbD,GAAG,CAACC,IAAD,CAAH,CAAY,iBAAkBV,CAAAA,QAAQ,CAACG,OAAO,CAACO,IAAD,CAAP,OAAAP,OAAO,WAAR,CAA1B,EAAZ,CACA,MAAOM,CAAAA,GAAP,CACD,CALa,CAMd,EANc,CAAhB,CASA,wBACKZ,uBADL,IAEKQ,OAFL,EAGEV,SAAS,CAATA,SAHF,CAIEK,QAAQ,CAARA,QAJF,CAKEW,IAAI,CAAElB,OAAO,CAACkB,IALhB,CAMEC,SAAS,CAAEf,uBAAuB,CAC9BA,uBAAuB,CAACe,SADM,CAE9B,iBAAM,KAAN,EARN,CASEC,SAAS,CAAE,oBAAM,CACf,GAAMC,CAAAA,KAAK,CAAGtB,QAAQ,EAAtB,CAEA,MACEE,CAAAA,MAAM,CAACqB,iBAAP,CAAyBD,KAAzB,CAAgC7B,aAAa,CAAC+B,MAAd,EAAhC,CAAkE,CAChEC,UAAU,CAAEH,KAAK,CAACG,UAD8C,CAEhEC,cAAc,CAAE,EAFgD,CAAlE,IAGO,IAHP,EAICrB,uBAAuB,EAAIA,uBAAuB,CAACgB,SAAxB,EAJ5B,EAKA,KANF,CAQD,CApBH,GAuBD,CA9CM,CA8CJ,CACDnB,MADC,CAEDF,QAFC,CAGDK,uBAHC,CAIDF,SAJC,CAKDF,OAAO,CAACkB,IALP,CAMDb,kBANC,CAODP,QAPC,CA9CI,CAAP,CAuDD","sourcesContent":["import * as React from 'react';\nimport * as CommonActions from './CommonActions';\nimport NavigationContext from './NavigationContext';\nimport ResetRootContext from './ResetRootContext';\nimport { NavigationStateContext } from './NavigationContainer';\nimport { NavigationEventEmitter } from './useEventEmitter';\nimport {\n  NavigationHelpers,\n  NavigationProp,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n  PrivateValueStore,\n} from './types';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  onAction: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter;\n  router: Router<State, Action>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers<\n  State extends NavigationState,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>\n>({ onAction, getState, emitter, router }: Options<State, Action>) {\n  const resetRoot = React.useContext(ResetRootContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n  const { performTransaction } = React.useContext(NavigationStateContext);\n\n  return React.useMemo(() => {\n    const dispatch = (action: Action | ((state: State) => Action)) =>\n      performTransaction(() => {\n        const payload =\n          typeof action === 'function' ? action(getState()) : action;\n\n        onAction(payload);\n      });\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n      (acc, name) => {\n        // @ts-ignore\n        acc[name] = (...args: any) => dispatch(actions[name](...args));\n        return acc;\n      },\n      {}\n    );\n\n    return {\n      ...parentNavigationHelpers,\n      ...helpers,\n      resetRoot,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n          }) !== null ||\n          (parentNavigationHelpers && parentNavigationHelpers.canGoBack()) ||\n          false\n        );\n      },\n    } as NavigationHelpers<ParamListBase, EventMap> &\n      (NavigationProp<ParamListBase, string, any, any, any> | undefined);\n  }, [\n    router,\n    getState,\n    parentNavigationHelpers,\n    resetRoot,\n    emitter.emit,\n    performTransaction,\n    onAction,\n  ]);\n}\n"]}