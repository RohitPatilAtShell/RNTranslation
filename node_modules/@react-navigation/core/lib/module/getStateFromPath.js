import _defineProperty from"@babel/runtime/helpers/defineProperty";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import escape from'escape-string-regexp';import queryString from'query-string';export default function getStateFromPath(path){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var routeConfig=Object.keys(options).map(function(key){var pattern=typeof options[key]==='string'?options[key]:options[key].path;var match=new RegExp('^'+escape(pattern).replace(/:[a-z0-9]+/gi,'([^/]+)')+'/?');return{match:match,pattern:pattern,routeName:key,parse:options[key].parse};});var result;var current;var remaining=path.replace(/[/]+/,'/').replace(/^\//,'').replace(/\?.*/,'');while(remaining){var _routeName=void 0;var params=void 0;var _loop=function _loop(config){var match=remaining.match(config.match);if(match){_routeName=config.routeName;var paramPatterns=config.pattern.split('/').filter(function(p){return p.startsWith(':');});if(paramPatterns.length){params=paramPatterns.reduce(function(acc,p,i){var key=p.replace(/^:/,'');var value=match[i+1];acc[key]=config.parse&&config.parse[key]?config.parse[key](value):value;return acc;},{});}remaining=remaining.replace(match[0],'');return"break";}};for(var _iterator=routeConfig,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref;if(_isArray){if(_i>=_iterator.length)break;_ref=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref=_i.value;}var config=_ref;var _ret=_loop(config);if(_ret==="break")break;}if(_routeName===undefined){var segments=remaining.split('/');_routeName=decodeURIComponent(segments[0]);segments.shift();remaining=segments.join('/');}var state={routes:[{name:_routeName,params:params}]};if(current){current.routes[0].state=state;}else{result=state;}current=state;}if(current==null||result==null){return undefined;}var query=path.split('?')[1];if(query){var route=current.routes[0];var _params=queryString.parse(query);var _config=options[route.name]?options[route.name].parse:undefined;if(_config){Object.keys(_params).forEach(function(name){if(_config[name]&&typeof _params[name]==='string'){_params[name]=_config[name](_params[name]);}});}route.params=_objectSpread({},route.params,{},_params);}return result;}
//# sourceMappingURL=getStateFromPath.js.map