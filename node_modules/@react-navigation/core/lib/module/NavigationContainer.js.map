{"version":3,"sources":["NavigationContainer.tsx"],"names":["React","CommonActions","EnsureSingleNavigator","NavigationBuilderContext","ResetRootContext","useFocusedListeners","useDevTools","useStateGetters","MISSING_CONTEXT_ERROR","NavigationStateContext","createContext","isDefault","getState","Error","setState","performTransaction","getPartialState","state","undefined","key","routeNames","partialState","stale","routes","map","route","Container","forwardRef","NavigationContainer","ref","initialState","onStateChange","independent","children","parent","useContext","useState","setNavigationState","navigationStateRef","useRef","transactionStateRef","isTransactionActiveRef","isFirstMountRef","skipTrackingRef","reset","useCallback","current","name","trackState","trackAction","listeners","addFocusedListener","addListener","getStateForRoute","addStateGetter","dispatch","action","navigation","canGoBack","result","handled","resetRoot","getRootState","useImperativeHandle","Object","keys","reduce","acc","builderContext","useMemo","callback","navigationState","context","useEffect"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as CommonActions from './CommonActions';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport ResetRootContext from './ResetRootContext';\nimport useFocusedListeners from './useFocusedListeners';\nimport useDevTools from './useDevTools';\nimport useStateGetters from './useStateGetters';\n\nimport {\n  Route,\n  NavigationState,\n  InitialState,\n  PartialState,\n  NavigationAction,\n  NavigationContainerRef,\n  NavigationContainerProps,\n} from './types';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst MISSING_CONTEXT_ERROR =\n  \"We couldn't find a navigation context. Have you wrapped your app with 'NavigationContainer'?\";\n\nexport const NavigationStateContext = React.createContext<{\n  isDefault?: true;\n  state?: NavigationState | PartialState<NavigationState>;\n  getState: () => NavigationState | PartialState<NavigationState> | undefined;\n  setState: (\n    state: NavigationState | PartialState<NavigationState> | undefined\n  ) => void;\n  key?: string;\n  performTransaction: (action: () => void) => void;\n}>({\n  isDefault: true,\n\n  get getState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get performTransaction(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  // @ts-ignore\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map(route => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst Container = React.forwardRef(function NavigationContainer(\n  {\n    initialState,\n    onStateChange,\n    independent,\n    children,\n  }: NavigationContainerProps,\n  ref: React.Ref<NavigationContainerRef>\n) {\n  const parent = React.useContext(NavigationStateContext);\n\n  if (!parent.isDefault && !independent) {\n    throw new Error(\n      \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely.\"\n    );\n  }\n\n  const [state, setNavigationState] = React.useState<State>(() =>\n    getPartialState(initialState == null ? undefined : initialState)\n  );\n\n  const navigationStateRef = React.useRef<State>();\n  const transactionStateRef = React.useRef<State | null>(null);\n  const isTransactionActiveRef = React.useRef<boolean>(false);\n  const isFirstMountRef = React.useRef<boolean>(true);\n  const skipTrackingRef = React.useRef<boolean>(false);\n\n  const reset = React.useCallback((state: NavigationState) => {\n    skipTrackingRef.current = true;\n    setNavigationState(state);\n  }, []);\n\n  const { trackState, trackAction } = useDevTools({\n    name: '@react-navigation',\n    reset,\n    state,\n  });\n\n  const { listeners, addListener: addFocusedListener } = useFocusedListeners();\n\n  const { getStateForRoute, addStateGetter } = useStateGetters();\n\n  const dispatch = (\n    action: NavigationAction | ((state: NavigationState) => NavigationAction)\n  ) => {\n    listeners[0](navigation => navigation.dispatch(action));\n  };\n\n  const canGoBack = () => {\n    const { result, handled } = listeners[0](navigation =>\n      navigation.canGoBack()\n    );\n\n    if (handled) {\n      return result;\n    } else {\n      return false;\n    }\n  };\n\n  const resetRoot = React.useCallback(\n    (state?: PartialState<NavigationState> | NavigationState) => {\n      trackAction('@@RESET_ROOT');\n      setNavigationState(state);\n    },\n    [trackAction]\n  );\n\n  const getRootState = React.useCallback(() => {\n    return getStateForRoute('root');\n  }, [getStateForRoute]);\n\n  React.useImperativeHandle(ref, () => ({\n    ...(Object.keys(CommonActions) as Array<keyof typeof CommonActions>).reduce<\n      any\n    >((acc, name) => {\n      acc[name] = (...args: any[]) =>\n        dispatch(\n          CommonActions[name](\n            // @ts-ignore\n            ...args\n          )\n        );\n      return acc;\n    }, {}),\n    resetRoot,\n    dispatch,\n    canGoBack,\n    getRootState,\n  }));\n\n  const builderContext = React.useMemo(\n    () => ({\n      addFocusedListener,\n      addStateGetter,\n      trackAction,\n    }),\n    [addFocusedListener, trackAction, addStateGetter]\n  );\n\n  const performTransaction = React.useCallback((callback: () => void) => {\n    if (isTransactionActiveRef.current) {\n      throw new Error(\n        \"Only one transaction can be active at a time. Did you accidentally nest 'performTransaction'?\"\n      );\n    }\n\n    setNavigationState((navigationState: State) => {\n      isTransactionActiveRef.current = true;\n      transactionStateRef.current = navigationState;\n\n      callback();\n\n      isTransactionActiveRef.current = false;\n\n      return transactionStateRef.current;\n    });\n  }, []);\n\n  const getState = React.useCallback(\n    () =>\n      transactionStateRef.current !== null\n        ? transactionStateRef.current\n        : navigationStateRef.current,\n    []\n  );\n\n  const setState = React.useCallback((navigationState: State) => {\n    if (transactionStateRef.current === null) {\n      throw new Error(\n        \"Any 'setState' calls need to be done inside 'performTransaction'\"\n      );\n    }\n\n    transactionStateRef.current = navigationState;\n  }, []);\n\n  const context = React.useMemo(\n    () => ({\n      state,\n      performTransaction,\n      getState,\n      setState,\n    }),\n    [getState, performTransaction, setState, state]\n  );\n\n  React.useEffect(() => {\n    if (skipTrackingRef.current) {\n      skipTrackingRef.current = false;\n    } else {\n      trackState(getRootState);\n    }\n\n    navigationStateRef.current = state;\n    transactionStateRef.current = null;\n\n    if (!isFirstMountRef.current && onStateChange) {\n      onStateChange(getRootState());\n    }\n\n    isFirstMountRef.current = false;\n  }, [state, onStateChange, trackState, getRootState]);\n\n  return (\n    <NavigationBuilderContext.Provider value={builderContext}>\n      <NavigationStateContext.Provider value={context}>\n        <ResetRootContext.Provider value={resetRoot}>\n          <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n        </ResetRootContext.Provider>\n      </NavigationStateContext.Provider>\n    </NavigationBuilderContext.Provider>\n  );\n});\n\nexport default Container;\n"]}