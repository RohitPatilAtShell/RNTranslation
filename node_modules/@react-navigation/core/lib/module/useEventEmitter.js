import _toConsumableArray from"@babel/runtime/helpers/toConsumableArray";import*as React from'react';export default function useEventEmitter(){var listeners=React.useRef({});var create=React.useCallback(function(target){var removeListener=function removeListener(type,callback){var callbacks=listeners.current[type]?listeners.current[type][target]:undefined;if(!callbacks){return;}var index=callbacks.indexOf(callback);callbacks.splice(index,1);};var addListener=function addListener(type,callback){listeners.current[type]=listeners.current[type]||{};listeners.current[type][target]=listeners.current[type][target]||[];listeners.current[type][target].push(callback);return function(){return removeListener(type,callback);};};return{addListener:addListener,removeListener:removeListener};},[]);var emit=React.useCallback(function(_ref){var _ref2;var type=_ref.type,data=_ref.data,target=_ref.target;var items=listeners.current[type]||{};var callbacks=target!==undefined?items[target]&&items[target].slice():(_ref2=[]).concat.apply(_ref2,_toConsumableArray(Object.keys(items).map(function(t){return items[t];})));var defaultPrevented=false;var event={get type(){return type;},get data(){return data;},get defaultPrevented(){return defaultPrevented;},preventDefault:function preventDefault(){defaultPrevented=true;}};callbacks&&callbacks.forEach(function(cb){return cb(event);});return event;},[]);return React.useMemo(function(){return{create:create,emit:emit};},[create,emit]);}
//# sourceMappingURL=useEventEmitter.js.map