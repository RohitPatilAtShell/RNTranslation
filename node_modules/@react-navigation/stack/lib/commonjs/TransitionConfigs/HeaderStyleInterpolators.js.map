{"version":3,"sources":["HeaderStyleInterpolators.tsx"],"names":["interpolate","Animated","add","forUIKit","current","next","layouts","defaultOffset","leftSpacing","leftLabelOffset","leftLabel","screen","width","titleLeftOffset","title","rightOffset","progress","leftButtonStyle","opacity","inputRange","outputRange","leftLabelStyle","transform","translateX","I18nManager","isRTL","rightButtonStyle","titleStyle","backgroundStyle","forFade","forStatic","forNoAnimation"],"mappings":"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","sourcesContent":["import { I18nManager } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport {\n  StackHeaderInterpolationProps,\n  StackHeaderInterpolatedStyle,\n} from '../types';\n\nconst { interpolate, add } = Animated;\n\n/**\n * Standard UIKit style animation for the header where the title fades into the back button label.\n */\nexport function forUIKit({\n  current,\n  next,\n  layouts,\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const defaultOffset = 100;\n  const leftSpacing = 27;\n\n  // The title and back button title should cross-fade to each other\n  // When screen is fully open, the title should be in center, and back title should be on left\n  // When screen is closing, the previous title will animate to back title's position\n  // And back title will animate to title's position\n  // We achieve this by calculating the offsets needed to translate title to back title's position and vice-versa\n  const leftLabelOffset = layouts.leftLabel\n    ? (layouts.screen.width - layouts.leftLabel.width) / 2 - leftSpacing\n    : defaultOffset;\n  const titleLeftOffset = layouts.title\n    ? (layouts.screen.width - layouts.title.width) / 2 - leftSpacing\n    : defaultOffset;\n\n  // When the current title is animating to right, it is centered in the right half of screen in middle of transition\n  // The back title also animates in from this position\n  const rightOffset = layouts.screen.width / 4;\n\n  const progress = add(current.progress, next ? next.progress : 0);\n\n  return {\n    leftButtonStyle: {\n      opacity: interpolate(progress, {\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0],\n      }),\n    },\n    leftLabelStyle: {\n      transform: [\n        {\n          translateX: interpolate(progress, {\n            inputRange: [0, 1, 2],\n            outputRange: I18nManager.isRTL\n              ? [-rightOffset, 0, leftLabelOffset]\n              : [leftLabelOffset, 0, -rightOffset],\n          }),\n        },\n      ],\n    },\n    rightButtonStyle: {\n      opacity: interpolate(progress, {\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0],\n      }),\n    },\n    titleStyle: {\n      opacity: interpolate(progress, {\n        inputRange: [0, 0.4, 1, 1.5],\n        outputRange: [0, 0.1, 1, 0],\n      }),\n      transform: [\n        {\n          translateX: interpolate(progress, {\n            inputRange: [0.5, 1, 2],\n            outputRange: I18nManager.isRTL\n              ? [-titleLeftOffset, 0, rightOffset]\n              : [rightOffset, 0, -titleLeftOffset],\n          }),\n        },\n      ],\n    },\n    backgroundStyle: {\n      transform: [\n        {\n          translateX: interpolate(progress, {\n            inputRange: [0, 1, 2],\n            outputRange: I18nManager.isRTL\n              ? [-layouts.screen.width, 0, layouts.screen.width]\n              : [layouts.screen.width, 0, -layouts.screen.width],\n          }),\n        },\n      ],\n    },\n  };\n}\n\n/**\n * Simple fade animation for the header elements.\n */\nexport function forFade({\n  current,\n  next,\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const progress = add(current.progress, next ? next.progress : 0);\n  const opacity = interpolate(progress, {\n    inputRange: [0, 1, 2],\n    outputRange: [0, 1, 0],\n  });\n\n  return {\n    leftButtonStyle: { opacity },\n    rightButtonStyle: { opacity },\n    titleStyle: { opacity },\n    backgroundStyle: {\n      opacity: interpolate(progress, {\n        inputRange: [0, 1, 1.9, 2],\n        outputRange: [0, 1, 1, 0],\n      }),\n    },\n  };\n}\n\n/**\n * Simple translate animation to translate the header along with the sliding screen.\n */\nexport function forStatic({\n  current,\n  next,\n  layouts: { screen },\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const progress = add(current.progress, next ? next.progress : 0);\n  const translateX = interpolate(progress, {\n    inputRange: [0, 1, 2],\n    outputRange: I18nManager.isRTL\n      ? [-screen.width, 0, screen.width]\n      : [screen.width, 0, -screen.width],\n  });\n\n  const transform = [{ translateX }];\n\n  return {\n    leftButtonStyle: { transform },\n    rightButtonStyle: { transform },\n    titleStyle: { transform },\n    backgroundStyle: { transform },\n  };\n}\n\nexport function forNoAnimation(): StackHeaderInterpolatedStyle {\n  return {};\n}\n"]}