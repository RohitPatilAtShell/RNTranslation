{"version":3,"sources":["Stack.tsx"],"names":["dimensions","Dimensions","get","layout","width","height","AnimatedScreen","MaybeScreenContainer","enabled","rest","Platform","OS","Screens","screensEnabled","MaybeScreen","active","Animated","createAnimatedComponent","NativeScreen","cond","eq","ANIMATED_ONE","Value","FALLBACK_DESCRIPTOR","Object","freeze","options","getFloatingHeaderHeights","routes","insets","descriptors","previous","defaultHeaderHeight","reduce","acc","curr","key","StyleSheet","flatten","headerStyle","Stack","state","scenes","progress","props","floatingHeaderHeights","handleLayout","e","nativeEvent","setState","handleFloatingHeaderLayout","route","previousHeight","handleTransitionStart","closing","navigation","emit","type","data","target","handleTransitionEnd","mode","closingRouteKeys","onOpenRoute","onCloseRoute","onGoBack","getPreviousRoute","getGesturesEnabled","renderHeader","renderScene","headerMode","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","focusedRoute","index","focusedDescriptor","focusedOptions","defaultTransitionPreset","ModalTransition","DefaultTransition","headerStyleInterpolator","forNoAnimation","safeAreaInsets","top","right","bottom","left","styles","container","map","self","focused","current","scene","next","isScreenActive","length","descriptor","headerShown","headerTransparent","cardTransparent","cardShadowEnabled","cardOverlayEnabled","cardStyle","gestureResponseDistance","gestureVelocityImpact","gestureDirection","transitionSpec","cardStyleInterpolator","transitionConfig","nextScene","safeAreaInsetTop","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","absoluteFill","includes","onContentHeightChange","styleInterpolator","undefined","style","floating","openingRouteKeys","animationEnabled","previousRoute","nextRoute","oldScene","React","Component","create","flex","overflow","position"],"mappings":"g/BAAA,oDACA,yCAQA,sFAGA,qEAIA,sDAEA,8DACA,4EAIA,0F,m4BA+CA,GAAMA,CAAAA,UAAU,CAAGC,wBAAWC,GAAX,CAAe,QAAf,CAAnB,CACA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,KAAK,CAAEJ,UAAU,CAACI,KAApB,CAA2BC,MAAM,CAAEL,UAAU,CAACK,MAA9C,CAAf,CAEA,GAAIC,CAAAA,cAAJ,CAIA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,MAMvB,IALJC,CAAAA,OAKI,MALJA,OAKI,CAJDC,IAIC,yDACJ,GAAIC,sBAASC,EAAT,GAAgB,KAAhB,EAAyBH,OAAzB,EAAoCI,OAAO,CAACC,cAAR,EAAxC,CAAkE,CAChE,MAAO,qBAAC,OAAD,CAAS,eAAT,0BAA6BJ,IAA7B,mDAAP,CACD,CAED,MAAO,qBAAC,iBAAD,0BAAUA,IAAV,mDAAP,CACD,CAZD,CAcA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,OAQd,IAPJN,CAAAA,OAOI,OAPJA,OAOI,CANJO,MAMI,OANJA,MAMI,CALDN,IAKC,mEACJ,GAAIC,sBAASC,EAAT,GAAgB,KAAhB,EAAyBH,OAAzB,EAAoCI,OAAO,CAACC,cAAR,EAAxC,CAAkE,CAChEP,cAAc,CACZA,cAAc,EAAIU,+BAASC,uBAAT,CAAiCL,OAAO,CAACM,YAAzC,CADpB,CAGA,MAAO,qBAAC,cAAD,wBAAgB,MAAM,CAAEH,MAAxB,EAAoCN,IAApC,oDAAP,CACD,CAED,MAAO,qBAAC,iBAAD,0BAAUA,IAAV,oDAAP,CACD,CAjBD,C,GAmBQU,CAAAA,I,CAAaH,8B,CAAbG,I,CAAMC,E,CAAOJ,8B,CAAPI,E,CAEd,GAAMC,CAAAA,YAAY,CAAG,GAAIL,gCAASM,KAAb,CAAmB,CAAnB,CAArB,CAEA,GAAMC,CAAAA,mBAAmB,CAAGC,MAAM,CAACC,MAAP,CAAc,CAAEC,OAAO,CAAE,EAAX,CAAd,CAA5B,CAEA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAC/BC,MAD+B,CAE/BC,MAF+B,CAG/BC,WAH+B,CAI/B3B,MAJ+B,CAK/B4B,QAL+B,CAM5B,CACH,GAAMC,CAAAA,mBAAmB,CAAG,0CAAuB7B,MAAvB,CAA+B0B,MAA/B,CAA5B,CAEA,MAAOD,CAAAA,MAAM,CAACK,MAAP,CAAsC,SAACC,GAAD,CAAMC,IAAN,CAAe,WACjCL,WAAW,CAACK,IAAI,CAACC,GAAN,CAAX,EAAyB,EADQ,qBAClDV,OADkD,CAClDA,OADkD,wBACxC,EADwC,uCAElBW,wBAAWC,OAAX,CACtCZ,OAAO,CAACa,WAAR,EAAuB,EADe,CAFkB,2CAElDlC,MAFkD,CAElDA,MAFkD,gCAEzC0B,QAAQ,CAACI,IAAI,CAACC,GAAN,CAFiC,uBAM1DF,GAAG,CAACC,IAAI,CAACC,GAAN,CAAH,CAAgB,MAAO/B,CAAAA,MAAP,GAAkB,QAAlB,CAA6BA,MAA7B,CAAsC2B,mBAAtD,CAEA,MAAOE,CAAAA,GAAP,CACD,CATM,CASJ,EATI,CAAP,CAUD,CAnBD,C,GAqBqBM,CAAAA,K,8aA6EnBC,K,CAAe,CACbb,MAAM,CAAE,EADK,CAEbc,MAAM,CAAE,EAFK,CAGbC,QAAQ,CAAE,EAHG,CAIbxC,MAAM,CAANA,MAJa,CAKb2B,WAAW,CAAE,MAAKc,KAAL,CAAWd,WALX,CAWbe,qBAAqB,CAAE,EAXV,C,OAcPC,Y,CAAe,SAACC,CAAD,CAA0B,2BACrBA,CAAC,CAACC,WAAF,CAAc7C,MADO,CACvCE,MADuC,uBACvCA,MADuC,CAC/BD,KAD+B,uBAC/BA,KAD+B,CAG/C,GACEC,MAAM,GAAK,MAAKoC,KAAL,CAAWtC,MAAX,CAAkBE,MAA7B,EACAD,KAAK,GAAK,MAAKqC,KAAL,CAAWtC,MAAX,CAAkBC,KAF9B,CAGE,CACA,OACD,CAED,GAAMD,CAAAA,MAAM,CAAG,CAAEC,KAAK,CAALA,KAAF,CAASC,MAAM,CAANA,MAAT,CAAf,CAEA,MAAK4C,QAAL,CAAc,SAAAR,KAAK,QAAK,CACtBtC,MAAM,CAANA,MADsB,CAEtB0C,qBAAqB,CAAElB,wBAAwB,CAC7C,MAAKiB,KAAL,CAAWhB,MADkC,CAE7C,MAAKgB,KAAL,CAAWf,MAFkC,CAG7CY,KAAK,CAACX,WAHuC,CAI7C3B,MAJ6C,CAK7C,EAL6C,CAFzB,CAAL,EAAnB,EAUD,C,OAEO+C,0B,CAA6B,eAM/B,IALJC,CAAAA,KAKI,OALJA,KAKI,CAJJ9C,MAII,OAJJA,MAII,CACJ,GAAM+C,CAAAA,cAAc,CAAG,MAAKX,KAAL,CAAWI,qBAAX,CAAiCM,KAAK,CAACf,GAAvC,CAAvB,CAEA,GAAIgB,cAAc,EAAIA,cAAc,GAAK/C,MAAzC,CAAiD,CAC/C,OACD,CAED,MAAK4C,QAAL,CAAc,SAAAR,KAAK,QAAK,CACtBI,qBAAqB,kBAChBJ,KAAK,CAACI,qBADU,iCAElBM,KAAK,CAACf,GAFY,CAEN/B,MAFM,EADC,CAAL,EAAnB,EAMD,C,OAEOgD,qB,CAAwB,eAE9BC,OAF8B,KAC5BH,CAAAA,KAD4B,OAC5BA,KAD4B,OAI9B,OAAKP,KAAL,CAAWW,UAAX,CAAsBC,IAAtB,CAA2B,CACzBC,IAAI,CAAE,iBADmB,CAEzBC,IAAI,CAAE,CAAEJ,OAAO,CAAPA,OAAF,CAFmB,CAGzBK,MAAM,CAAER,KAAK,CAACf,GAHW,CAA3B,CAJ8B,E,OAUxBwB,mB,CAAsB,eAE5BN,OAF4B,KAC1BH,CAAAA,KAD0B,OAC1BA,KAD0B,OAI5B,OAAKP,KAAL,CAAWW,UAAX,CAAsBC,IAAtB,CAA2B,CACzBC,IAAI,CAAE,eADmB,CAEzBC,IAAI,CAAE,CAAEJ,OAAO,CAAPA,OAAF,CAFmB,CAGzBK,MAAM,CAAER,KAAK,CAACf,GAHW,CAA3B,CAJ4B,E,qFAUrB,iCAoBH,KAAKQ,KApBF,CAELiB,IAFK,aAELA,IAFK,CAGLhC,MAHK,aAGLA,MAHK,CAILC,WAJK,aAILA,WAJK,CAKLW,KALK,aAKLA,KALK,CAMLc,UANK,aAMLA,UANK,CAOL3B,MAPK,aAOLA,MAPK,CAQLkC,gBARK,aAQLA,gBARK,CASLC,WATK,aASLA,WATK,CAULC,YAVK,aAULA,YAVK,CAWLC,QAXK,aAWLA,QAXK,CAYLC,gBAZK,aAYLA,gBAZK,CAaLC,kBAbK,aAaLA,kBAbK,CAcLC,YAdK,aAcLA,YAdK,CAeLC,WAfK,aAeLA,WAfK,CAgBLC,UAhBK,aAgBLA,UAhBK,CAiBLC,iBAjBK,aAiBLA,iBAjBK,CAkBLC,mBAlBK,aAkBLA,mBAlBK,CAmBLC,kBAnBK,aAmBLA,kBAnBK,iBAsBqD,KAAKhC,KAtB1D,CAsBCC,MAtBD,aAsBCA,MAtBD,CAsBSvC,MAtBT,aAsBSA,MAtBT,CAsBiBwC,QAtBjB,aAsBiBA,QAtBjB,CAsB2BE,qBAtB3B,aAsB2BA,qBAtB3B,CAwBP,GAAM6B,CAAAA,YAAY,CAAGjC,KAAK,CAACb,MAAN,CAAaa,KAAK,CAACkC,KAAnB,CAArB,CACA,GAAMC,CAAAA,iBAAiB,CAAG9C,WAAW,CAAC4C,YAAY,CAACtC,GAAd,CAArC,CACA,GAAMyC,CAAAA,cAAc,CAAGD,iBAAiB,CAAGA,iBAAiB,CAAClD,OAArB,CAA+B,EAAvE,CAEA,GAAIoD,CAAAA,uBAAuB,CACzBjB,IAAI,GAAK,OAAT,CAAmBkB,kCAAnB,CAAqCC,oCADvC,CAGA,GAAIV,UAAU,GAAK,QAAnB,CAA6B,CAC3BQ,uBAAuB,kBAClBA,uBADkB,EAErBG,uBAAuB,CAAEC,wCAFJ,EAAvB,CAID,CApCM,UA2CHL,cAAc,CAACM,cAAf,EAAiC,EA3C9B,iBAuCLC,GAvCK,CAuCLA,GAvCK,oBAuCCvD,MAAM,CAACuD,GAvCR,6BAwCLC,KAxCK,CAwCLA,KAxCK,sBAwCGxD,MAAM,CAACwD,KAxCV,gCAyCLC,MAzCK,CAyCLA,MAzCK,uBAyCIzD,MAAM,CAACyD,MAzCX,+BA0CLC,IA1CK,CA0CLA,IA1CK,qBA0CE1D,MAAM,CAAC0D,IA1CT,YA6CP,MACE,qBAAC,KAAD,CAAO,QAAP,mDACE,oBAAC,oBAAD,EACE,OAAO,CAAE1B,IAAI,GAAK,OADpB,CAEE,KAAK,CAAE2B,MAAM,CAACC,SAFhB,CAGE,QAAQ,CAAE,KAAK3C,YAHjB,kDAKGlB,MAAM,CAAC8D,GAAP,CAAW,SAACvC,KAAD,CAAQwB,KAAR,CAAegB,IAAf,CAAwB,CAClC,GAAMC,CAAAA,OAAO,CAAGlB,YAAY,CAACtC,GAAb,GAAqBe,KAAK,CAACf,GAA3C,CACA,GAAMyD,CAAAA,OAAO,CAAGlD,QAAQ,CAACQ,KAAK,CAACf,GAAP,CAAxB,CACA,GAAM0D,CAAAA,KAAK,CAAGpD,MAAM,CAACiC,KAAD,CAApB,CACA,GAAMoB,CAAAA,IAAI,CAAGJ,IAAI,CAAChB,KAAK,CAAG,CAAT,CAAJ,CACThC,QAAQ,CAACgD,IAAI,CAAChB,KAAK,CAAG,CAAT,CAAJ,CAAgBvC,GAAjB,CADC,CAETf,YAFJ,CAKA,GAAM2E,CAAAA,cAAc,CAClBrB,KAAK,GAAKgB,IAAI,CAACM,MAAL,CAAc,CAAxB,CACI,CADJ,CAEIvF,sBAASC,EAAT,GAAgB,SAAhB,CACAQ,IAAI,CAACC,EAAE,CAAC2E,IAAD,CAAO,CAAP,CAAH,CAAc,CAAd,CAAiB,CAAjB,CADJ,CAEApB,KAAK,GAAKgB,IAAI,CAACM,MAAL,CAAc,CAAxB,CACA,CADA,CAEA,CAPN,CATkC,UAgC9BH,KAAK,CAACI,UAAN,CACAJ,KAAK,CAACI,UAAN,CAAiBxE,OADjB,CAEC,EAlC6B,CAmBhCyD,cAnBgC,OAmBhCA,cAnBgC,CAoBhCgB,WApBgC,OAoBhCA,WApBgC,CAqBhCC,iBArBgC,OAqBhCA,iBArBgC,CAsBhCC,eAtBgC,OAsBhCA,eAtBgC,CAuBhCC,iBAvBgC,OAuBhCA,iBAvBgC,CAwBhCC,kBAxBgC,OAwBhCA,kBAxBgC,CAyBhCC,SAzBgC,OAyBhCA,SAzBgC,CA0BhCC,uBA1BgC,OA0BhCA,uBA1BgC,CA2BhCC,qBA3BgC,OA2BhCA,qBA3BgC,6BA4BhCC,gBA5BgC,CA4BhCA,gBA5BgC,gCA4Bb7B,uBAAuB,CAAC6B,gBA5BX,kDA6BhCC,cA7BgC,CA6BhCA,cA7BgC,+BA6Bf9B,uBAAuB,CAAC8B,cA7BT,kDA8BhCC,qBA9BgC,CA8BhCA,qBA9BgC,gCA8BR/B,uBAAuB,CAAC+B,qBA9BhB,mDA+BhC5B,uBA/BgC,CA+BhCA,uBA/BgC,gCA+BNH,uBAAuB,CAACG,uBA/BlB,uBAoClC,GAAI6B,CAAAA,gBAAgB,CAAG,CACrBF,cAAc,CAAdA,cADqB,CAErBC,qBAAqB,CAArBA,qBAFqB,CAGrB5B,uBAAuB,CAAvBA,uBAHqB,CAAvB,CAYA,GAAIN,KAAK,GAAKgB,IAAI,CAACM,MAAL,CAAc,CAA5B,CAA+B,CAC7B,GAAMc,CAAAA,SAAS,CAAGrE,MAAM,CAACiC,KAAK,CAAG,CAAT,CAAxB,CAEA,GAAIoC,SAAJ,CAAe,WAKTA,SAAS,CAACb,UAAV,CACAa,SAAS,CAACb,UAAV,CAAqBxE,OADrB,CAEC,EAPQ,4BAEXkF,cAFW,CAEXA,eAFW,+BAEM9B,uBAAuB,CAAC8B,cAF9B,kDAGXC,qBAHW,CAGXA,sBAHW,gCAGa/B,uBAAuB,CAAC+B,qBAHrC,mDAIX5B,uBAJW,CAIXA,wBAJW,gCAIeH,uBAAuB,CAACG,uBAJvC,uBASb6B,gBAAgB,CAAG,CACjBF,cAAc,CAAdA,eADiB,CAEjBC,qBAAqB,CAArBA,sBAFiB,CAGjB5B,uBAAuB,CAAvBA,wBAHiB,CAAnB,CAKD,CACF,CAlEiC,WAyE9BE,cAAc,EAAI,EAzEY,mBAqEhCC,GArEgC,CAqE3B4B,gBArE2B,qBAqERnF,MAAM,CAACuD,GArEC,gCAsEhCC,KAtEgC,CAsEzB4B,kBAtEyB,uBAsEJpF,MAAM,CAACwD,KAtEH,mCAuEhCC,MAvEgC,CAuExB4B,mBAvEwB,wBAuEFrF,MAAM,CAACyD,MAvEL,kCAwEhCC,IAxEgC,CAwE1B4B,iBAxE0B,sBAwENtF,MAAM,CAAC0D,IAxED,aA2ElC,MACE,qBAAC,WAAD,EACE,GAAG,CAAEpC,KAAK,CAACf,GADb,CAEE,KAAK,CAAEC,wBAAW+E,YAFpB,CAGE,OAAO,CAAEvD,IAAI,GAAK,OAHpB,CAIE,MAAM,CAAEmC,cAJV,CAKE,aAAa,CAAC,UALhB,kDAOE,oBAAC,kBAAD,wBACE,KAAK,CAAErB,KADT,CAEE,MAAM,CAAEA,KAAK,GAAKgB,IAAI,CAACM,MAAL,CAAc,CAFlC,CAGE,OAAO,CAAEL,OAHX,CAIE,OAAO,CAAE9B,gBAAgB,CAACuD,QAAjB,CAA0BlE,KAAK,CAACf,GAAhC,CAJX,CAKE,MAAM,CAAEjC,MALV,CAME,OAAO,CAAE0F,OANX,CAOE,KAAK,CAAEC,KAPT,CAQE,aAAa,CAAEpD,MAAM,CAACiC,KAAK,CAAG,CAAT,CARvB,CASE,UAAU,CAAEpB,UATd,CAUE,KAAK,CAAEd,KAVT,CAWE,gBAAgB,CAAEuE,gBAXpB,CAYE,kBAAkB,CAAEC,kBAZtB,CAaE,mBAAmB,CAAEC,mBAbvB,CAcE,iBAAiB,CAAEC,iBAdrB,CAeE,eAAe,CAAEd,eAfnB,CAgBE,kBAAkB,CAAEE,kBAhBtB,CAiBE,iBAAiB,CAAED,iBAjBrB,CAkBE,SAAS,CAAEE,SAlBb,CAmBE,iBAAiB,CAAEjC,iBAnBrB,CAoBE,mBAAmB,CAAEC,mBApBvB,CAqBE,kBAAkB,CAAEC,kBArBtB,CAsBE,uBAAuB,CAAEgC,uBAtB3B,CAuBE,oBAAoB,CAAE5D,qBAAqB,CAACM,KAAK,CAACf,GAAP,CAvB7C,CAwBE,gBAAgB,CAAE8B,gBAxBpB,CAyBE,UAAU,CAAEI,UAzBd,CA0BE,WAAW,CAAE6B,WA1Bf,CA2BE,iBAAiB,CAAEC,iBA3BrB,CA4BE,YAAY,CAAEhC,YA5BhB,CA6BE,WAAW,CAAEC,WA7Bf,CA8BE,WAAW,CAAEN,WA9Bf,CA+BE,YAAY,CAAEC,YA/BhB,CAgCE,iBAAiB,CAAE,MAAI,CAACX,qBAhC1B,CAiCE,eAAe,CAAE,MAAI,CAACO,mBAjCxB,CAkCE,QAAQ,CAAEK,QAlCZ,CAmCE,cAAc,CAAEU,KAAK,GAAK,CAAV,EAAeR,kBAAkB,CAAC,CAAEhB,KAAK,CAALA,KAAF,CAAD,CAnCnD,CAoCE,qBAAqB,CAAEuD,qBApCzB,CAqCE,gBAAgB,CAAEC,gBArCpB,EAsCMG,gBAtCN,oDAPF,CADF,CAkDD,CA7HA,CALH,CADF,CAqIGxC,UAAU,GAAK,OAAf,CACGF,YAAY,CAAC,CACXP,IAAI,CAAE,OADK,CAEX1D,MAAM,CAANA,MAFW,CAGX0B,MAAM,CAAE,CAAEuD,GAAG,CAAHA,GAAF,CAAOC,KAAK,CAALA,KAAP,CAAcC,MAAM,CAANA,MAAd,CAAsBC,IAAI,CAAJA,IAAtB,CAHG,CAIX7C,MAAM,CAANA,MAJW,CAKXD,KAAK,CAALA,KALW,CAMXyB,gBAAgB,CAAhBA,gBANW,CAOXoD,qBAAqB,CAAE,KAAKpE,0BAPjB,CAQXqE,iBAAiB,CACf1C,cAAc,CAACI,uBAAf,GAA2CuC,SAA3C,CACI3C,cAAc,CAACI,uBADnB,CAEIH,uBAAuB,CAACG,uBAXnB,CAYXwC,KAAK,CAAEjC,MAAM,CAACkC,QAZH,CAAD,CADf,CAeG,IApJN,CADF,CAwJD,C,4EAhW+B9E,K,CAAcH,K,CAAc,CAC1D,GACEG,KAAK,CAAChB,MAAN,GAAiBa,KAAK,CAACb,MAAvB,EACAgB,KAAK,CAACd,WAAN,GAAsBW,KAAK,CAACX,WAF9B,CAGE,CACA,MAAO,KAAP,CACD,CAED,GAAMa,CAAAA,QAAQ,CAAGC,KAAK,CAAChB,MAAN,CAAaK,MAAb,CAAoC,SAACC,GAAD,CAAMC,IAAN,CAAe,CAClE,GAAM+D,CAAAA,UAAU,CAAGtD,KAAK,CAACd,WAAN,CAAkBK,IAAI,CAACC,GAAvB,CAAnB,CAEAF,GAAG,CAACC,IAAI,CAACC,GAAN,CAAH,CACEK,KAAK,CAACE,QAAN,CAAeR,IAAI,CAACC,GAApB,GACA,GAAIpB,gCAASM,KAAb,CACEsB,KAAK,CAAC+E,gBAAN,CAAuBN,QAAvB,CAAgClF,IAAI,CAACC,GAArC,GACA8D,UADA,EAEAA,UAAU,CAACxE,OAAX,CAAmBkG,gBAAnB,GAAwC,KAFxC,CAGI,CAHJ,CAII,CALN,CAFF,CAUA,MAAO1F,CAAAA,GAAP,CACD,CAdgB,CAcd,EAdc,CAAjB,CAgBA,MAAO,CACLN,MAAM,CAAEgB,KAAK,CAAChB,MADT,CAELc,MAAM,CAAEE,KAAK,CAAChB,MAAN,CAAa8D,GAAb,CAAiB,SAACvC,KAAD,CAAQwB,KAAR,CAAegB,IAAf,CAAwB,CAC/C,GAAMkC,CAAAA,aAAa,CAAGlC,IAAI,CAAChB,KAAK,CAAG,CAAT,CAA1B,CACA,GAAMmD,CAAAA,SAAS,CAAGnC,IAAI,CAAChB,KAAK,CAAG,CAAT,CAAtB,CAEA,GAAMkB,CAAAA,OAAO,CAAGlD,QAAQ,CAACQ,KAAK,CAACf,GAAP,CAAxB,CACA,GAAML,CAAAA,QAAQ,CAAG8F,aAAa,CAC1BlF,QAAQ,CAACkF,aAAa,CAACzF,GAAf,CADkB,CAE1BoF,SAFJ,CAGA,GAAMzB,CAAAA,IAAI,CAAG+B,SAAS,CAAGnF,QAAQ,CAACmF,SAAS,CAAC1F,GAAX,CAAX,CAA6BoF,SAAnD,CAEA,GAAMO,CAAAA,QAAQ,CAAGtF,KAAK,CAACC,MAAN,CAAaiC,KAAb,CAAjB,CACA,GAAMmB,CAAAA,KAAK,CAAG,CACZ3C,KAAK,CAALA,KADY,CAEZpB,QAAQ,CAAE8F,aAFE,CAGZ3B,UAAU,CACRtD,KAAK,CAACd,WAAN,CAAkBqB,KAAK,CAACf,GAAxB,GACAK,KAAK,CAACX,WAAN,CAAkBqB,KAAK,CAACf,GAAxB,CADA,GAEC2F,QAAQ,CAAGA,QAAQ,CAAC7B,UAAZ,CAAyB3E,mBAFlC,CAJU,CAOZoB,QAAQ,CAAE,CACRkD,OAAO,CAAPA,OADQ,CAERE,IAAI,CAAJA,IAFQ,CAGRhE,QAAQ,CAARA,QAHQ,CAPE,CAAd,CAcA,GACEgG,QAAQ,EACRjC,KAAK,CAAC3C,KAAN,GAAgB4E,QAAQ,CAAC5E,KADzB,EAEA2C,KAAK,CAACnD,QAAN,CAAekD,OAAf,GAA2BkC,QAAQ,CAACpF,QAAT,CAAkBkD,OAF7C,EAGAC,KAAK,CAACnD,QAAN,CAAeoD,IAAf,GAAwBgC,QAAQ,CAACpF,QAAT,CAAkBoD,IAH1C,EAIAD,KAAK,CAACnD,QAAN,CAAeZ,QAAf,GAA4BgG,QAAQ,CAACpF,QAAT,CAAkBZ,QAJ9C,EAKA+D,KAAK,CAACI,UAAN,GAAqB6B,QAAQ,CAAC7B,UANhC,CAOE,CACA,MAAO6B,CAAAA,QAAP,CACD,CAED,MAAOjC,CAAAA,KAAP,CACD,CArCO,CAFH,CAwCLnD,QAAQ,CAARA,QAxCK,CAyCLb,WAAW,CAAEc,KAAK,CAACd,WAzCd,CA0CLe,qBAAqB,CAAElB,wBAAwB,CAC7CiB,KAAK,CAAChB,MADuC,CAE7CgB,KAAK,CAACf,MAFuC,CAG7CY,KAAK,CAACX,WAHuC,CAI7CW,KAAK,CAACtC,MAJuC,CAK7CsC,KAAK,CAACI,qBALuC,CA1C1C,CAAP,CAkDD,C,mBA3EgCmF,KAAK,CAACC,S,wBAoWzC,GAAMzC,CAAAA,MAAM,CAAGnD,wBAAW6F,MAAX,CAAkB,CAC/BzC,SAAS,CAAE,CACT0C,IAAI,CAAE,CADG,CAETC,QAAQ,CAAE,QAFD,CADoB,CAK/BV,QAAQ,CAAE,CACRW,QAAQ,CAAE,UADF,CAERjD,GAAG,CAAE,CAFG,CAGRG,IAAI,CAAE,CAHE,CAIRF,KAAK,CAAE,CAJC,CALqB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  LayoutChangeEvent,\n  Dimensions,\n  Platform,\n  ViewProps,\n} from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { EdgeInsets } from 'react-native-safe-area-context';\n// eslint-disable-next-line import/no-unresolved\nimport * as Screens from 'react-native-screens'; // Import with * as to prevent getters being called\nimport { Route } from '@react-navigation/core';\nimport { StackNavigationState } from '@react-navigation/routers';\n\nimport { getDefaultHeaderHeight } from '../Header/HeaderSegment';\nimport { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport StackItem from './StackItem';\nimport {\n  DefaultTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport {\n  Layout,\n  StackHeaderMode,\n  Scene,\n  StackDescriptorMap,\n  StackNavigationOptions,\n  StackNavigationHelpers,\n} from '../../types';\n\ntype ProgressValues = {\n  [key: string]: Animated.Value<number>;\n};\n\ntype Props = {\n  mode: 'card' | 'modal';\n  insets: EdgeInsets;\n  state: StackNavigationState;\n  navigation: StackNavigationHelpers;\n  descriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onGoBack: (props: { route: Route<string> }) => void;\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getGesturesEnabled: (props: { route: Route<string> }) => boolean;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  headerMode: StackHeaderMode;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene<Route<string>>[];\n  progress: ProgressValues;\n  layout: Layout;\n  floatingHeaderHeights: Record<string, number>;\n};\n\nconst dimensions = Dimensions.get('window');\nconst layout = { width: dimensions.width, height: dimensions.height };\n\nlet AnimatedScreen: React.ComponentType<ViewProps & {\n  active: number | Animated.Node<number>;\n}>;\n\nconst MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Platform.OS !== 'ios' && enabled && Screens.screensEnabled()) {\n    return <Screens.ScreenContainer {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nconst MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: number | Animated.Node<number>;\n  children: React.ReactNode;\n}) => {\n  if (Platform.OS !== 'ios' && enabled && Screens.screensEnabled()) {\n    AnimatedScreen =\n      AnimatedScreen || Animated.createAnimatedComponent(Screens.NativeScreen);\n\n    return <AnimatedScreen active={active} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nconst { cond, eq } = Animated;\n\nconst ANIMATED_ONE = new Animated.Value(1);\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getFloatingHeaderHeights = (\n  routes: Route<string>[],\n  insets: EdgeInsets,\n  descriptors: StackDescriptorMap,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  const defaultHeaderHeight = getDefaultHeaderHeight(layout, insets);\n\n  return routes.reduce<Record<string, number>>((acc, curr) => {\n    const { options = {} } = descriptors[curr.key] || {};\n    const { height = previous[curr.key] } = StyleSheet.flatten(\n      options.headerStyle || {}\n    );\n\n    acc[curr.key] = typeof height === 'number' ? height : defaultHeaderHeight;\n\n    return acc;\n  }, {});\n};\n\nexport default class Stack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const progress = props.routes.reduce<ProgressValues>((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n\n      acc[curr.key] =\n        state.progress[curr.key] ||\n        new Animated.Value(\n          props.openingRouteKeys.includes(curr.key) &&\n          descriptor &&\n          descriptor.options.animationEnabled !== false\n            ? 0\n            : 1\n        );\n\n      return acc;\n    }, {});\n\n    return {\n      routes: props.routes,\n      scenes: props.routes.map((route, index, self) => {\n        const previousRoute = self[index - 1];\n        const nextRoute = self[index + 1];\n\n        const current = progress[route.key];\n        const previous = previousRoute\n          ? progress[previousRoute.key]\n          : undefined;\n        const next = nextRoute ? progress[nextRoute.key] : undefined;\n\n        const oldScene = state.scenes[index];\n        const scene = {\n          route,\n          previous: previousRoute,\n          descriptor:\n            props.descriptors[route.key] ||\n            state.descriptors[route.key] ||\n            (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR),\n          progress: {\n            current,\n            next,\n            previous,\n          },\n        };\n\n        if (\n          oldScene &&\n          scene.route === oldScene.route &&\n          scene.progress.current === oldScene.progress.current &&\n          scene.progress.next === oldScene.progress.next &&\n          scene.progress.previous === oldScene.progress.previous &&\n          scene.descriptor === oldScene.descriptor\n        ) {\n          return oldScene;\n        }\n\n        return scene;\n      }),\n      progress,\n      descriptors: props.descriptors,\n      floatingHeaderHeights: getFloatingHeaderHeights(\n        props.routes,\n        props.insets,\n        state.descriptors,\n        state.layout,\n        state.floatingHeaderHeights\n      ),\n    };\n  }\n\n  state: State = {\n    routes: [],\n    scenes: [],\n    progress: {},\n    layout,\n    descriptors: this.props.descriptors,\n    // Used when card's header is null and mode is float to make transition\n    // between screens with headers and those without headers smooth.\n    // This is not a great heuristic here. We don't know synchronously\n    // on mount what the header height is so we have just used the most\n    // common cases here.\n    floatingHeaderHeights: {},\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      height === this.state.layout.height &&\n      width === this.state.layout.width\n    ) {\n      return;\n    }\n\n    const layout = { width, height };\n\n    this.setState(state => ({\n      layout,\n      floatingHeaderHeights: getFloatingHeaderHeights(\n        this.props.routes,\n        this.props.insets,\n        state.descriptors,\n        layout,\n        {}\n      ),\n    }));\n  };\n\n  private handleFloatingHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    const previousHeight = this.state.floatingHeaderHeights[route.key];\n\n    if (previousHeight && previousHeight === height) {\n      return;\n    }\n\n    this.setState(state => ({\n      floatingHeaderHeights: {\n        ...state.floatingHeaderHeights,\n        [route.key]: height,\n      },\n    }));\n  };\n\n  private handleTransitionStart = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionStart',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleTransitionEnd = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionEnd',\n      data: { closing },\n      target: route.key,\n    });\n\n  render() {\n    const {\n      mode,\n      insets,\n      descriptors,\n      state,\n      navigation,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      onGoBack,\n      getPreviousRoute,\n      getGesturesEnabled,\n      renderHeader,\n      renderScene,\n      headerMode,\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel,\n    } = this.props;\n\n    const { scenes, layout, progress, floatingHeaderHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedDescriptor = descriptors[focusedRoute.key];\n    const focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n\n    let defaultTransitionPreset =\n      mode === 'modal' ? ModalTransition : DefaultTransition;\n\n    if (headerMode === 'screen') {\n      defaultTransitionPreset = {\n        ...defaultTransitionPreset,\n        headerStyleInterpolator: forNoAnimation,\n      };\n    }\n\n    const {\n      top = insets.top,\n      right = insets.right,\n      bottom = insets.bottom,\n      left = insets.left,\n    } = focusedOptions.safeAreaInsets || {};\n\n    return (\n      <React.Fragment>\n        <MaybeScreenContainer\n          enabled={mode !== 'modal'}\n          style={styles.container}\n          onLayout={this.handleLayout}\n        >\n          {routes.map((route, index, self) => {\n            const focused = focusedRoute.key === route.key;\n            const current = progress[route.key];\n            const scene = scenes[index];\n            const next = self[index + 1]\n              ? progress[self[index + 1].key]\n              : ANIMATED_ONE;\n\n            // Display current screen and a screen beneath. On Android screen beneath is hidden on animation finished bs of RNS's issue.\n            const isScreenActive =\n              index === self.length - 1\n                ? 1\n                : Platform.OS === 'android'\n                ? cond(eq(next, 1), 0, 1)\n                : index === self.length - 2\n                ? 1\n                : 0;\n\n            const {\n              safeAreaInsets,\n              headerShown,\n              headerTransparent,\n              cardTransparent,\n              cardShadowEnabled,\n              cardOverlayEnabled,\n              cardStyle,\n              gestureResponseDistance,\n              gestureVelocityImpact,\n              gestureDirection = defaultTransitionPreset.gestureDirection,\n              transitionSpec = defaultTransitionPreset.transitionSpec,\n              cardStyleInterpolator = defaultTransitionPreset.cardStyleInterpolator,\n              headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n            } = scene.descriptor\n              ? scene.descriptor.options\n              : ({} as StackNavigationOptions);\n\n            let transitionConfig = {\n              transitionSpec,\n              cardStyleInterpolator,\n              headerStyleInterpolator,\n            };\n\n            // When a screen is not the last, it should use next screen's transition config\n            // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n            // For example combining a slide and a modal transition would look wrong otherwise\n            // With this approach, combining different transition styles in the same navigator mostly looks right\n            // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n            // but majority of the transitions look alright\n            if (index !== self.length - 1) {\n              const nextScene = scenes[index + 1];\n\n              if (nextScene) {\n                const {\n                  transitionSpec = defaultTransitionPreset.transitionSpec,\n                  cardStyleInterpolator = defaultTransitionPreset.cardStyleInterpolator,\n                  headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                } = nextScene.descriptor\n                  ? nextScene.descriptor.options\n                  : ({} as StackNavigationOptions);\n\n                transitionConfig = {\n                  transitionSpec,\n                  cardStyleInterpolator,\n                  headerStyleInterpolator,\n                };\n              }\n            }\n\n            const {\n              top: safeAreaInsetTop = insets.top,\n              right: safeAreaInsetRight = insets.right,\n              bottom: safeAreaInsetBottom = insets.bottom,\n              left: safeAreaInsetLeft = insets.left,\n            } = safeAreaInsets || {};\n\n            return (\n              <MaybeScreen\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                enabled={mode !== 'modal'}\n                active={isScreenActive}\n                pointerEvents=\"box-none\"\n              >\n                <StackItem\n                  index={index}\n                  active={index === self.length - 1}\n                  focused={focused}\n                  closing={closingRouteKeys.includes(route.key)}\n                  layout={layout}\n                  current={current}\n                  scene={scene}\n                  previousScene={scenes[index - 1]}\n                  navigation={navigation}\n                  state={state}\n                  safeAreaInsetTop={safeAreaInsetTop}\n                  safeAreaInsetRight={safeAreaInsetRight}\n                  safeAreaInsetBottom={safeAreaInsetBottom}\n                  safeAreaInsetLeft={safeAreaInsetLeft}\n                  cardTransparent={cardTransparent}\n                  cardOverlayEnabled={cardOverlayEnabled}\n                  cardShadowEnabled={cardShadowEnabled}\n                  cardStyle={cardStyle}\n                  onPageChangeStart={onPageChangeStart}\n                  onPageChangeConfirm={onPageChangeConfirm}\n                  onPageChangeCancel={onPageChangeCancel}\n                  gestureResponseDistance={gestureResponseDistance}\n                  floatingHeaderHeight={floatingHeaderHeights[route.key]}\n                  getPreviousRoute={getPreviousRoute}\n                  headerMode={headerMode}\n                  headerShown={headerShown}\n                  headerTransparent={headerTransparent}\n                  renderHeader={renderHeader}\n                  renderScene={renderScene}\n                  onOpenRoute={onOpenRoute}\n                  onCloseRoute={onCloseRoute}\n                  onTransitionStart={this.handleTransitionStart}\n                  onTransitionEnd={this.handleTransitionEnd}\n                  onGoBack={onGoBack}\n                  gestureEnabled={index !== 0 && getGesturesEnabled({ route })}\n                  gestureVelocityImpact={gestureVelocityImpact}\n                  gestureDirection={gestureDirection}\n                  {...transitionConfig}\n                />\n              </MaybeScreen>\n            );\n          })}\n        </MaybeScreenContainer>\n        {headerMode === 'float'\n          ? renderHeader({\n              mode: 'float',\n              layout,\n              insets: { top, right, bottom, left },\n              scenes,\n              state,\n              getPreviousRoute,\n              onContentHeightChange: this.handleFloatingHeaderLayout,\n              styleInterpolator:\n                focusedOptions.headerStyleInterpolator !== undefined\n                  ? focusedOptions.headerStyleInterpolator\n                  : defaultTransitionPreset.headerStyleInterpolator,\n              style: styles.floating,\n            })\n          : null}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  floating: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]}