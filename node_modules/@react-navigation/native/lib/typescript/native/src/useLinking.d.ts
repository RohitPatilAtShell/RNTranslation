import * as React from 'react';
import { NavigationContainerRef, NavigationState, PartialState } from '@react-navigation/core';
declare type Config = {
    [routeName: string]: string | {
        path: string;
        parse?: Record<string, (value: string) => any>;
    };
};
declare type Options = {
    /**
     * The prefixes are stripped from the URL before parsing them.
     * Usually they are the `scheme` + `host` (e.g. `myapp://chat?user=jane`)
     */
    prefixes: string[];
    /**
     * Config to fine-tune how to parse the path.
     *
     * Example:
     * ```js
     * {
     *   Chat: {
     *     path: 'chat/:author/:id',
     *     parse: { id: Number }
     *   }
     * }
     * ```
     */
    config?: Config;
    /**
     * Custom function to parse the URL object to a valid navigation state (advanced).
     */
    getStateFromPath?: (path: string, options?: Config) => PartialState<NavigationState> | undefined;
};
export default function useLinking(ref: React.RefObject<NavigationContainerRef>, { prefixes, config, getStateFromPath }: Options): {
    getInitialState: () => Promise<PartialState<NavigationState> | undefined>;
};
export {};
