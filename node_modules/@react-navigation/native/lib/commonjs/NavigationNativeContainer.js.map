{"version":3,"sources":["NavigationNativeContainer.tsx"],"names":["NavigationNativeContainer","React","forwardRef","NativeContainer","props","ref","refContainer","useRef","useImperativeHandle","current","children"],"mappings":"wUAAA,oDACA,4CAKA,sE,mHAYA,GAAMA,CAAAA,yBAAyB,CAAGC,KAAK,CAACC,UAAN,CAAiB,QAASC,CAAAA,eAAT,CACjDC,KADiD,CAEjDC,GAFiD,CAGjD,CACA,GAAMC,CAAAA,YAAY,CAAGL,KAAK,CAACM,MAAN,CAAqC,IAArC,CAArB,CAEA,2BAAcD,YAAd,EAEAL,KAAK,CAACO,mBAAN,CAA0BH,GAA1B,CAA+B,iBAAMC,CAAAA,YAAY,CAACG,OAAnB,EAA/B,EAEA,MACE,qBAAC,yBAAD,0BACML,KADN,EAEE,GAAG,CAAEE,YAFP,CAGE,QAAQ,CAAEF,KAAK,CAACM,QAHlB,kDADF,CAOD,CAjBiC,CAAlC,C,aAmBeV,yB","sourcesContent":["import * as React from 'react';\nimport {\n  NavigationContainer,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from '@react-navigation/core';\nimport useBackButton from './useBackButton';\n\n/**\n * Container component which holds the navigation state\n * designed for mobile apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst NavigationNativeContainer = React.forwardRef(function NativeContainer(\n  props: NavigationContainerProps,\n  ref: React.Ref<NavigationContainerRef>\n) {\n  const refContainer = React.useRef<NavigationContainerRef>(null);\n\n  useBackButton(refContainer);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  return (\n    <NavigationContainer\n      {...props}\n      ref={refContainer}\n      children={props.children}\n    />\n  );\n});\n\nexport default NavigationNativeContainer;\n"]}